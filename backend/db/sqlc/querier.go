// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CheckSeatAvailability(ctx context.Context, arg CheckSeatAvailabilityParams) (bool, error)
	CountOccupiedSeats(ctx context.Context, flightID pgtype.Int8) (int64, error)
	CreateAdmin(ctx context.Context, userID int64) (int64, error)
	// booking_id VARCHAR(30) PRIMARY KEY,
	CreateBooking(ctx context.Context, arg CreateBookingParams) (Booking, error)
	CreateCustomer(ctx context.Context, arg CreateCustomerParams) (Customer, error)
	CreateFlight(ctx context.Context, arg CreateFlightParams) (Flight, error)
	CreateNews(ctx context.Context, arg CreateNewsParams) (News, error)
	CreateSeat(ctx context.Context, arg CreateSeatParams) (Seat, error)
	CreateTicket(ctx context.Context, arg CreateTicketParams) (Ticket, error)
	CreateTicketOwnerSnapshot(ctx context.Context, arg CreateTicketOwnerSnapshotParams) (Ticketownersnapshot, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeactivateUser(ctx context.Context, userID int64) error
	DeleteAdmin(ctx context.Context, userID int64) error
	DeleteBookings(ctx context.Context, bookingID int64) error
	DeleteCustomer(ctx context.Context, userID int64) error
	DeleteFlight(ctx context.Context, flightID int64) error
	DeleteTicket(ctx context.Context, ticketID int64) error
	DeleteUser(ctx context.Context, userID int64) error
	GetAdmin(ctx context.Context, userID int64) (int64, error)
	GetAdminByEmail(ctx context.Context, email string) (GetAdminByEmailRow, error)
	GetAllAdmin(ctx context.Context) ([]int64, error)
	GetAllCustomer(ctx context.Context) ([]Customer, error)
	GetAllNewsWithAuthor(ctx context.Context) ([]GetAllNewsWithAuthorRow, error)
	GetAllSeats(ctx context.Context) ([]Seat, error)
	GetAllTicketOwnerSnapshots(ctx context.Context) ([]Ticketownersnapshot, error)
	GetAllUser(ctx context.Context) ([]User, error)
	GetBooking(ctx context.Context, bookingID int64) (Booking, error)
	GetCustomer(ctx context.Context, userID int64) (Customer, error)
	GetCustomerByEmail(ctx context.Context, email string) (Customer, error)
	GetFlight(ctx context.Context, flightID int64) (Flight, error)
	GetFlightsByStatus(ctx context.Context, flightID int64) (FlightStatus, error)
	GetNews(ctx context.Context, id int64) (News, error)
	GetSeat(ctx context.Context, seatID int64) (Seat, error)
	GetTicket(ctx context.Context, ticketID int64) (Ticket, error)
	GetTicketByFlightId(ctx context.Context, flightID pgtype.Int8) ([]Ticket, error)
	GetTicketOwnerSnapshot(ctx context.Context, ticketID int64) (Ticketownersnapshot, error)
	GetUser(ctx context.Context, userID int64) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	IsAdmin(ctx context.Context, userID int64) (bool, error)
	ListAdmins(ctx context.Context, arg ListAdminsParams) ([]int64, error)
	ListBookings(ctx context.Context, arg ListBookingsParams) ([]Booking, error)
	ListCustomers(ctx context.Context, arg ListCustomersParams) ([]Customer, error)
	ListFlights(ctx context.Context, arg ListFlightsParams) ([]Flight, error)
	ListNews(ctx context.Context, arg ListNewsParams) ([]News, error)
	ListSeatsWithFlightId(ctx context.Context, flightID pgtype.Int8) ([]Seat, error)
	ListTicketOwnerSnapshots(ctx context.Context, arg ListTicketOwnerSnapshotsParams) ([]Ticketownersnapshot, error)
	ListTickets(ctx context.Context, arg ListTicketsParams) ([]Ticket, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	MarkSeatUnavailable(ctx context.Context, arg MarkSeatUnavailableParams) error
	RemoveAuthorFromBlogPosts(ctx context.Context, authorID pgtype.Int8) error
	RemoveUserFromBookings(ctx context.Context, userEmail pgtype.Text) error
	UpdateCustomer(ctx context.Context, arg UpdateCustomerParams) error
	UpdatePassword(ctx context.Context, arg UpdatePasswordParams) error
	UpdateSeat(ctx context.Context, arg UpdateSeatParams) error
	UpdateTicket(ctx context.Context, arg UpdateTicketParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) error
}

var _ Querier = (*Queries)(nil)
