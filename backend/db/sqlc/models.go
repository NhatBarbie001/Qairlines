// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"database/sql"
	"time"
)

type Airplane struct {
	AirplaneID         int64        `json:"airplane_id"`
	AirplaneModelID    int64        `json:"airplane_model_id"`
	RegistrationNumber string       `json:"registration_number"`
	Active             sql.NullBool `json:"active"`
}

type AirplaneModel struct {
	AirplaneModelID int64     `json:"airplane_model_id"`
	Name            string    `json:"name"`
	Manufacturer    string    `json:"manufacturer"`
	TotalSeats      int64     `json:"total_seats"`
	CreatedAt       time.Time `json:"created_at"`
}

type Airport struct {
	AirportID   int64     `json:"airport_id"`
	AirportCode string    `json:"airport_code"`
	City        string    `json:"city"`
	Name        string    `json:"name"`
	CreatedAt   time.Time `json:"created_at"`
}

type Booking struct {
	BookingID   string `json:"booking_id"`
	BookerEmail string `json:"booker_email"`
	// CHECK > 0
	NumberOfAdults int64 `json:"number_of_adults"`
	// CHECK (number_of_children >= 0)
	NumberOfChildren int32        `json:"number_of_children"`
	FlightClass      string       `json:"flight_class"`
	Cancelled        sql.NullBool `json:"cancelled"`
	FlightID         int64        `json:"flight_id"`
	BookingDate      sql.NullTime `json:"booking_date"`
}

type Flight struct {
	FlightID               int64           `json:"flight_id"`
	FlightNumber           string          `json:"flight_number"`
	RegistrationNumber     string          `json:"registration_number"`
	EstimatedDepartureTime sql.NullTime    `json:"estimated_departure_time"`
	ActualDepartureTime    sql.NullTime    `json:"actual_departure_time"`
	EstimatedArrivalTime   sql.NullTime    `json:"estimated_arrival_time"`
	ActualArrivalTime      sql.NullTime    `json:"actual_arrival_time"`
	DepartureAirportID     sql.NullInt64   `json:"departure_airport_id"`
	DestinationAirportID   sql.NullInt64   `json:"destination_airport_id"`
	FlightPrice            sql.NullFloat64 `json:"flight_price"`
	Status                 sql.NullString  `json:"status"`
}

type FlightSeat struct {
	FlightSeatsID      int64          `json:"flight_seats_id"`
	RegistrationNumber string         `json:"registration_number"`
	FlightClass        string         `json:"flight_class"`
	ClassMultiplier    sql.NullString `json:"class_multiplier"`
	ChildMultiplier    sql.NullString `json:"child_multiplier"`
	// CHECK > 0
	MaxRowSeat int64 `json:"max_row_seat"`
	MaxColSeat int64 `json:"max_col_seat"`
}

type Passenger struct {
	PassengerID    int64          `json:"passenger_id"`
	BookingID      string         `json:"booking_id"`
	CitizenID      string         `json:"citizen_id"`
	PassportNumber sql.NullString `json:"passport_number"`
	// CHECK (gender IN ('Male', 'Female'))
	Gender      string    `json:"gender"`
	PhoneNumber string    `json:"phone_number"`
	FirstName   string    `json:"first_name"`
	LastName    string    `json:"last_name"`
	Nationality string    `json:"nationality"`
	DateOfBirth time.Time `json:"date_of_birth"`
	SeatRow     int32     `json:"seat_row"`
	SeatCol     string    `json:"seat_col"`
}

type Payment struct {
	PaymentID           int64          `json:"payment_id"`
	TransactionDateTime time.Time      `json:"transaction_date_time"`
	Amount              sql.NullString `json:"amount"`
	Currency            sql.NullString `json:"currency"`
	PaymentMethod       sql.NullString `json:"payment_method"`
	Status              sql.NullString `json:"status"`
	BookingID           sql.NullString `json:"booking_id"`
}
